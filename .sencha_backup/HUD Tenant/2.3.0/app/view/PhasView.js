/*
 * File: app/view/PhasView.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HUDTenant.view.PhasView', {
    extend: 'Ext.Panel',
    alias: 'widget.phasview',

    requires: [
        'Ext.Panel',
        'Ext.field.Select',
        'Ext.dataview.List',
        'Ext.Toolbar',
        'Ext.field.Search',
        'Ext.XTemplate',
        'HUDTenant.store.StateStore'
    ],

    config: {
        id: 'phasview',
        itemId: 'mainView',
        layout: 'vbox',
        items: [
            {
                xtype: 'panel',
                items: [
                    {
                        xtype: 'selectfield',
                        itemId: 'stateField',
                        label: 'State',
                        displayField: 'name',
                        store: 'StateStore',
                        valueField: 'abbreviation'
                    }
                ]
            },
            {
                xtype: 'panel',
                flex: 0.9,
                layout: 'fit',
                items: [
                    {
                        xtype: 'list',
                        itemId: 'list',
                        emptyText: 'No Matching Items',
                        itemTpl: [
                            '<div>{name}, {state}</div>'
                        ],
                        store: 'PhaStore',
                        grouped: true,
                        items: [
                            {
                                xtype: 'toolbar',
                                docked: 'top',
                                itemId: 'toolbar',
                                layout: {
                                    type: 'hbox',
                                    pack: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'searchfield',
                                        itemId: 'searchField',
                                        label: ''
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onListItemTap',
                event: 'itemtap',
                delegate: '#list'
            }
        ]
    },

    onListItemTap: function(dataview, index, target, record, e, eOpts) {
        var form = Ext.getCmp('pha-form');

        if (form === undefined){
            form = Ext.create('HUDTenant.view.PhaForm');
        }

        form.setRecord(record);
        Ext.Viewport.setActiveItem(form);
    }

});